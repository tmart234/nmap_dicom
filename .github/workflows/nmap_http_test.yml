name: Nmap DICOM Web Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-dicom-web:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: orthanc-web
            compose: docker/docker-compose.web.yml
            service: orthanc
            port: 8042
            expect: "Orthanc REST API: /system (version"
          - name: ohif-viewer
            compose: docker/docker-compose.web.yml
            service: viewer
            port: 3000
            expect: "OHIF Viewer: detected at /"
          - name: dcm4chee-arc-web
            compose: docker/docker-compose.web.yml
            service: dcm4chee
            port: 8080
            expect: "DCM4CHEE Archive UI: /dcm4chee-arc/ui2/"

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y nmap docker-compose

      - name: Install NSE
        run: |
          sudo mkdir -p /usr/share/nmap/scripts
          sudo cp scripts/dicom-web-info.nse /usr/share/nmap/scripts/
          sudo nmap --script-updatedb

      - name: Up ${{ matrix.target.name }}
        run: |
          set -e
          docker-compose -f ${{ matrix.target.compose }} up -d ${{ matrix.target.service }}
          if [ "${{ matrix.target.name }}" = "dcm4chee-arc-web" ]; then
            # WildFly + app boot can be slow: poll the UI2 endpoint up to 3 min
            for i in {1..36}; do
              if curl -fsS "http://localhost:8080/dcm4chee-arc/ui2/" >/dev/null; then break; fi
              sleep 5
            done
          else
            sleep 15
          fi
          nc -zv localhost ${{ matrix.target.port }}

      - name: Scan ${{ matrix.target.name }}
        id: scan
        run: |
          set -o pipefail
          OUT="nmap_http_${{ matrix.target.name }}.txt"
          nmap -p ${{ matrix.target.port }} --script dicom-web-info localhost | tee "$OUT"
          echo "out=$OUT" >> $GITHUB_OUTPUT

      - name: Assert ${{ matrix.target.name }} output
        run: |
          OUT="${{ steps.scan.outputs.out }}"
          grep -E '^\|[[:space:]]+${{ matrix.target.expect }}' "$OUT" || {
            echo "::error::Missing expected pattern: ${{ matrix.target.expect }}"
            sed -n '1,200p' "$OUT" || true
            exit 1
          }

      - name: Upload ${{ matrix.target.name }} artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nmap-http-${{ matrix.target.name }}
          path: ${{ steps.scan.outputs.out }}

      - name: Logs ${{ matrix.target.name }}
        if: always()
        run: docker-compose -f ${{ matrix.target.compose }} logs --tail=200 ${{ matrix.target.service }} || true

      - name: Down ${{ matrix.target.name }}
        if: always()
        run: docker-compose -f ${{ matrix.target.compose }} down -v --remove-orphans
