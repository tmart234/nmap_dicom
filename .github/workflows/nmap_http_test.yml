name: Nmap DICOM Web Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-dicom-web:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: orthanc-web
            compose: docker/docker-compose.web.yml
            service: orthanc
            port: 8042
            # match the structured output from the script (no legacy lines)
            expect: "path: /system"
          - name: ohif-viewer
            compose: docker/docker-compose.web.yml
            service: viewer
            port: 3000
            expect: "ohif: /"

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y nmap docker-compose curl netcat-openbsd

      - name: Install updated NSE into /usr/share
        run: |
          set -euo pipefail
          sudo mkdir -p /usr/share/nmap/scripts
          sudo cp -f scripts/dicom-web-info.nse /usr/share/nmap/scripts/dicom-web-info.nse
          sudo chown root:root /usr/share/nmap/scripts/dicom-web-info.nse
          sudo chmod 0644 /usr/share/nmap/scripts/dicom-web-info.nse
          sudo nmap --script-updatedb
          # quick human-readable help (useful in job logs)
          nmap --script-help dicom-web-info | sed -n '1,60p' || true

      - name: Up ${{ matrix.target.name }}
        run: |
          set -e
          docker-compose -f ${{ matrix.target.compose }} up -d ${{ matrix.target.service }}
          # wait for TCP
          for i in {1..120}; do
            if nc -z 127.0.0.1 ${{ matrix.target.port }}; then break; fi
            sleep 0.5
          done
          nc -zv 127.0.0.1 ${{ matrix.target.port }}

          # wait for HTTP to respond with any typical code (200/401/403/404)
          for i in {1..120}; do
            CODE=$(curl -sS -o /dev/null -w "%{http_code}" --max-time 2 "http://127.0.0.1:${{ matrix.target.port }}/" || true)
            if [ "$CODE" = "200" ] || [ "$CODE" = "401" ] || [ "$CODE" = "403" ] || [ "$CODE" = "404" ]; then
              break
            fi
            sleep 0.5
          done

      - name: Scan ${{ matrix.target.name }}
        id: scan
        env:
          NMAPDIR: /usr/share/nmap
        run: |
          set -o pipefail
          OUT="nmap_http_${{ matrix.target.name }}.txt"
          nmap -p ${{ matrix.target.port }} --script dicom-web-info 127.0.0.1 | tee "$OUT"
          echo "out=$OUT" >> $GITHUB_OUTPUT

      - name: Assert ${{ matrix.target.name }} output
        run: |
          OUT="${{ steps.scan.outputs.out }}"
          if ! grep -F '${{ matrix.target.expect }}' "$OUT"; then
            echo "::error::Missing expected: ${{ matrix.target.expect }}"
            sed -n '1,200p' "$OUT" || true
            exit 1
          fi

      - name: Upload ${{ matrix.target.name }} artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nmap-http-${{ matrix.target.name }}
          path: ${{ steps.scan.outputs.out }}

      - name: Logs ${{ matrix.target.name }}
        if: always()
        run: docker-compose -f ${{ matrix.target.compose }} logs --tail=200 ${{ matrix.target.service }} || true

      - name: Down ${{ matrix.target.name }}
        if: always()
        run: docker-compose -f ${{ matrix.target.compose }} down -v --remove-orphans
