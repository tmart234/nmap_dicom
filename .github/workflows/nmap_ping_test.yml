name: Nmap DICOM Test (using test_nmap.sh)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-nmap-dicom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- NEW DIAGNOSTIC STEP ---
      - name: List files after checkout
        run: |
          echo "Current directory: $PWD"
          echo "Listing root directory contents:"
          ls -la .
          echo "Listing 'nmap_dicom' directory contents (if it exists):"
          ls -la nmap_dicom || echo "'nmap_dicom' directory not found at root level."
      # --- END NEW DIAGNOSTIC STEP ---

      - name: Set up Python # Optional
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            nmap \
            tcpdump \
            tshark \
            docker-compose

      - name: Copy custom Nmap files
        run: |
          # Paths based on the confirmed structure relative to repo root
          NMAP_SCRIPT_SRC="nmap_dicom/scripts/dicom-ping.nse"
          NMAP_LIB_SRC="nmap_dicom/nselib/dicom.lua"

          echo "Attempting to access Nmap script at: $PWD/$NMAP_SCRIPT_SRC"
          if [ ! -f "$NMAP_SCRIPT_SRC" ]; then
            echo "::error::Nmap script file not found at '$NMAP_SCRIPT_SRC'. Please check the output of the 'List files after checkout' step."
            exit 1
          fi

          echo "Attempting to access Nmap library at: $PWD/$NMAP_LIB_SRC"
          if [ ! -f "$NMAP_LIB_SRC" ]; then
            echo "::error::Nmap library file not found at '$NMAP_LIB_SRC'. Please check the output of the 'List files after checkout' step."
            exit 1
          fi

          NMAP_DATA_DIR=$(nmap --datadir)
          echo "Nmap data directory: $NMAP_DATA_DIR"
          echo "Copying Nmap script and library..."
          sudo mkdir -p "${NMAP_DATA_DIR}/scripts/"
          sudo mkdir -p "${NMAP_DATA_DIR}/nselib/"
          sudo cp "$NMAP_SCRIPT_SRC" "${NMAP_DATA_DIR}/scripts/"
          sudo cp "$NMAP_LIB_SRC" "${NMAP_DATA_DIR}/nselib/"
          echo "Updating Nmap script database..."
          sudo nmap --script-updatedb
          echo "Nmap script database updated."

      - name: Start tcpdump capture
        id: start_tcpdump
        run: |
          DICOM_PORT=11112
          echo "Starting tcpdump capture for port $DICOM_PORT..."
          sudo tcpdump -i any -s 0 port $DICOM_PORT -w dicom_capture_orthanc.pcap &
          echo "tcpdump_pid=$!" >> $GITHUB_OUTPUT

      - name: Make test script executable
        # Assumes test_nmap.sh is inside nmap_dicom/
        run: chmod +x nmap_dicom/test_nmap.sh

      - name: Run DICOM Test Script
        id: test_script
        working-directory: ./nmap_dicom # Run from within the nmap_dicom directory
        run: |
          ./test_nmap.sh

      - name: Stop tcpdump capture
        if: always()
        run: |
          echo "Stopping tcpdump (PID: ${{ steps.start_tcpdump.outputs.tcpdump_pid }})..."
          if [ -n "${{ steps.start_tcpdump.outputs.tcpdump_pid }}" ]; then
            sudo kill ${{ steps.start_tcpdump.outputs.tcpdump_pid }} || echo "tcpdump already stopped or kill signal failed."
            sleep 2
            sudo kill -0 ${{ steps.start_tcpdump.outputs.tcpdump_pid }} 2>/dev/null && sudo kill -9 ${{ steps.start_tcpdump.outputs.tcpdump_pid }} || echo "tcpdump cleanly stopped or already gone."
          else
            echo "tcpdump PID not found in step outputs. Capture might not have started correctly."
          fi
          sleep 2

      - name: Print PCAP Info
        if: always()
        run: |
          # PCAP file should be created in the root directory by the tcpdump step
          PCAP_FILE="dicom_capture_orthanc.pcap"
          if [[ -f "$PCAP_FILE" ]]; then
            echo "--- PCAP Info for $PCAP_FILE ---"
            tshark -r "$PCAP_FILE" -c 50 -Y dicom || echo "No DICOM packets found or tshark error."
            echo "--- End PCAP Info ---"
          else
            echo "PCAP file $PCAP_FILE not found."
          fi
        continue-on-error: true

      - name: Upload pcap artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dicom-pcap-capture-orthanc
          # Path relative to the repo root
          path: dicom_capture_orthanc.pcap
          if-no-files-found: ignore

      - name: Check test script outcome
        if: steps.test_script.outcome != 'success'
        run: |
          echo "::error::Test script 'test_nmap.sh' failed!"
          exit 1