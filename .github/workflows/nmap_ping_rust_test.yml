name: Rust DICOM Ping (Nmap)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  rust-dicom-ping:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          # Install the small tools we need. Do NOT install docker.io/containerd here
          sudo apt-get install -y nmap netcat-openbsd iproute2 lsof

      - name: Install custom Nmap dicom-ping
        run: |
          sudo mkdir -p /usr/share/nmap/scripts /usr/share/nmap/nselib
          sudo cp scripts/dicom-ping.nse /usr/share/nmap/scripts/
          sudo cp nselib/dicom.lua /usr/share/nmap/nselib/
          sudo nmap --script-updatedb

      - name: Start Orthanc upstream (DIMSE 4242)
        run: |
          set -eux
          docker run -d --rm --name orthanc_up \
            -p 4242:4242 -p 8042:8042 \
            -e ORTHANC__REMOTE_ACCESS_ALLOWED=true \
            orthancteam/orthanc:latest
          # Wait until Orthanc DIMSE 4242 is accepting connections
          for i in {1..60}; do
            if nc -z 127.0.0.1 4242; then echo "Orthanc DIMSE is up"; break; fi
            sleep 1
          done
          nc -z 127.0.0.1 4242

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install dicom-scpproxy
        run: |
          set -eux
          cargo install --locked dicom-scpproxy
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

      - name: Start Rust DIMSE SCP (dicom-scpproxy on 11116)
        run: |
          set -eux
          export PATH="$HOME/.cargo/bin:$PATH"
          nohup dicom-scpproxy \
            --listen 0.0.0.0:11116 \
            --connect 127.0.0.1:4242 \
            --accept-any \
            > scpproxy.log 2>&1 & echo $! > scpproxy.pid

          # Wait for the listener using ss (reliable check for LISTEN state)
          for i in {1..60}; do
            if ss -ltn '( sport = :11116 )' | grep -q ':11116'; then
              echo "dicom-scpproxy is listening on 11116"
              break
            fi
            sleep 1
          done
          nc -z 127.0.0.1 11116

      - name: Nmap ping against Rust DIMSE (11116)
        id: nmap_ping
        run: |
          set -euxo pipefail
          OUT="nmap_rust_dicom_ping.txt"
          nmap -p 11116 \
            --script dicom-ping \
            --script-args dicom-ping.ports=11116,dicom.called_aet=ORTHANC \
            localhost | tee "$OUT"
          echo "out=$OUT" >> "$GITHUB_OUTPUT"

      - name: Assert output (vendor/version present, not DCMTK)
        run: |
          OUT="${{ steps.nmap_ping.outputs.out }}"
          grep -E 'DICOM Service Provider discovered' "$OUT" || {
            echo "::error::DICOM service not discovered on Rust port 11116"; exit 1; }
          grep -E '^[|]_?\s*vendor:\s*\S' "$OUT" || { echo "::error::Missing vendor line"; exit 1; }
          grep -E '^[|]_?\s*version:\s*\S' "$OUT" || { echo "::error::Missing version line"; exit 1; }
          if grep -E '^[|]_?\s*vendor:\s*DCMTK' "$OUT"; then
            echo "::error::Vendor shows DCMTK; you likely scanned Orthanc instead of the Rust SCP (port mix-up)."
            exit 1
          fi
          echo "âœ” Rust DIMSE was scanned (vendor not DCMTK)."

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rust-dicom-ping-artifacts
          path: |
            scpproxy.log
            ${{ steps.nmap_ping.outputs.out }}

      - name: Cleanup
        if: always()
        run: |
          set -eux
          if [ -f scpproxy.pid ]; then kill "$(cat scpproxy.pid)" || true; fi
          docker stop orthanc_up || true
