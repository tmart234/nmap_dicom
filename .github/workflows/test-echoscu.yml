name: Rust C-ECHO (dicom-rs) smoke

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-c-echo-rs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install base deps
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose netcat-openbsd

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install dicom-echoscu
        run: |
          set -euxo pipefail
          if ! cargo install --locked dicom-echoscu; then
            echo "crates.io install failed; building from source"
            git clone --depth=1 https://github.com/Enet4/dicom-rs.git
            cd dicom-rs/echoscu
            cargo install --path .
          fi
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

      - name: Start a simple SCP (Orthanc)
        run: |
          set -e
          # Expect a docker-compose.yml in repo that defines service "orthanc"
          docker-compose up -d --remove-orphans orthanc
          # Try common DICOM ports for Orthanc on host: 11112 (your matrix) then 4242 (Orthanc default)
          DICOM_PORT=""
          for p in 11112 4242; do
            for i in {1..30}; do
              if nc -z 127.0.0.1 "$p"; then DICOM_PORT="$p"; break; fi
              sleep 2
            done
            [ -n "$DICOM_PORT" ] && break
          done
          [ -n "$DICOM_PORT" ] || { echo "::error::No DICOM SCP port became ready (tried 11112,4242)"; exit 1; }
          echo "DICOM_PORT=$DICOM_PORT" >> $GITHUB_ENV
          echo "Using DICOM_PORT=$DICOM_PORT"

      - name: Run dicom-echoscu (C-ECHO)
        run: |
            set -euxo pipefail
            OUT="echoscu_orthanc.log"
            for i in {1..10}; do
            if dicom-echoscu --verbose --called-ae-title ORTHANC 127.0.0.1:${DICOM_PORT:-11112} | tee "$OUT"; then
                break
            fi
            echo "ECHO failed (try $i); sleeping 1sâ€¦"
            sleep 1
            done

            grep -q "C-ECHO-RSP Status: Success" "$OUT" || {
            echo "::error::ECHO never succeeded"; exit 1;
            }

      - name: Upload echoscu log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: echoscu-orthanc
          path: echoscu_orthanc.log

      - name: Dump Orthanc logs (tail)
        if: always()
        run: docker-compose logs --tail=200 orthanc || true

      - name: Down
        if: always()
        run: docker-compose down -v --remove-orphans
